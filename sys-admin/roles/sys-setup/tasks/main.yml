---
# SSH Configuration
- name: Add authorized SSH key
  authorized_key:
    user: "{{ allowed_ssh_user }}"
    state: present
    key: "{{ lookup('file', '{{ ssh_public_key_file }}') }}"

- name: Enable ED25519 ssh key
  lineinfile: dest=/etc/ssh/sshd_config regexp='^HostKey /etc/ssh/ssh_host_ecdsa_key' line='HostKey /etc/ssh/ssh_host_ed25519_key'

- name: Disable DSA host key
  lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: '^HostKey /etc/ssh/ssh_host_dsa_key'
    state: absent

- name: Allow only public key authentication
  lineinfile: dest=/etc/ssh/sshd_config regexp='^#?AuthenticationMethods' line='AuthenticationMethods publickey'
- lineinfile: dest=/etc/ssh/sshd_config regexp='^#?PasswordAuthentication' line='PasswordAuthentication no'
- lineinfile: dest=/etc/ssh/sshd_config regexp='^#?ChallengeResponseAuthentication' line='ChallengeResponseAuthentication no'
- lineinfile: dest=/etc/ssh/sshd_config regexp='^#?PubkeyAuthentication' line='PubkeyAuthentication yes'

# LogLevel VERBOSE logs user's key fingerprint on login. Needed to have a clear audit track of which key was using to log in.
- lineinfile: dest=/etc/ssh/sshd_config regexp='^LogLevel' line='LogLevel VERBOSE'

# Log sftp level file access (read/write/etc.) that would not be easily logged otherwise.
- lineinfile: dest=/etc/ssh/sshd_config regexp='^Subsystem\s+sftp' line='Subsystem sftp internal-sftp -f AUTHPRIV -l INFO'

- lineinfile: dest=/etc/ssh/sshd_config regexp='^PermitRootLogin' line='PermitRootLogin No'
- lineinfile: dest=/etc/ssh/sshd_config regexp='^UsePrivilegeSeparation' line='UsePrivilegeSeparation sandbox'

# Only allow specific users to login remotely (may be more suitable to change this to AllowGroups).
- lineinfile: dest=/etc/ssh/sshd_config regexp='^AllowUsers' line='AllowUsers {{ allowed_ssh_user }}'

- name: Empty MOTD
  copy:
    content: ""
    dest: /etc/motd
    group: root
    owner: root
    mode: 0644

- name: Copy issue.net
  copy:
    src: banner.txt
    dest: /etc/issue.net
    group: root
    owner: root
    mode: 0644

- name: Enable ssh banner
  lineinfile: dest=/etc/ssh/sshd_config regexp='^Banner' line='Banner /etc/issue.net'

- name: Reload sshd
  service:
    name: sshd
    state: reloaded

#- name: Set kernel boot options
#  template:
#    src: cmdline.txt
#    dest: /boot/cmdline.txt
#    owner: root
#    group: root
#    mode: 0755

- name: Disable Wifi module
  lineinfile: dest=/boot/config.txt line='dtoverlay=disable-wifi'

- name: Disable Bluetooth module
  lineinfile: dest=/boot/config.txt line='dtoverlay=disable-bt'

- name: Add custom mirrorlist
  template:
    src: mirrorlist
    dest: /etc/pacman.d/mirrorlist
    group: root
    owner: root
    mode: 0644

- name: Publish hostname to dhcp server
  lineinfile: dest=/etc/dhcpcd.conf regexp='^#?hostname' line='hostname'

- name: Add ntp servers option
  lineinfile: dest=/etc/dhcpcd.conf regexp='^#option ntp_servers' line='option ntp_servers'

- name: Create timesyncd.conf.d directory
  file:
    path: "/etc/systemd/timesyncd.conf.d"
    state: "directory"

- name: Copy timesyncd hook
  copy:
    src: timesyncd.conf
    dest: /lib/dhcpcd/dhcpcd-hooks/60-timesyncd.conf

- name: Restart dhcpd
  ansible.builtin.systemd:
    name: dhcpcd
    state: restarted
    enabled: yes

