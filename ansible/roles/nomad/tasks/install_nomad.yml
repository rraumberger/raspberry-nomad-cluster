---

- name: Fetch installed version
  ansible.builtin.command: "{{ nomad_binary }} version"
  register: installed_version_out
  failed_when: ( installed_version_out.rc not in [ 0, 1, 2 ] )

- name: DEBUG Installed version
  ansible.builtin.debug:
    msg: "{{ installed_version_out.stdout }}"

- name: Set requires installation fact
  set_fact:
    requires_nomad_installation: "{{ installed_version_out.rc != 0 or version not in installed_version_out.stdout}}"

- name: DEBUG Installation required?
  ansible.builtin.debug:
    msg: "{{ requires_nomad_installation }}"

- name: Create installer download location /opt/nomadInstall
  when: requires_nomad_installation
  file:
    path: "/opt/nomadInstall"
    state: "directory"

- name: Download Nomad
  become: false
  when: true in installation_required_list
  vars:
    installation_required_list: "{{ ansible_play_hosts|
                                    map('extract', hostvars, 'requires_nomad_installation')|
                                    list }}"
  connection: local
  get_url:
    url: "https://releases.hashicorp.com/nomad/{{version}}/nomad_{{version}}_linux_arm64.zip"
    dest: "/tmp/nomad_{{version}}_linux_arm64.zip"
    checksum: "sha256:{{shaHash}}"
  run_once: true

- name: Unarchive Nomad
  when: requires_nomad_installation
  ansible.builtin.unarchive:
    src: "/tmp/nomad_{{version}}_linux_arm64.zip"
    dest: /opt/nomadInstall

- name: Remove local downloaded archive
  when: requires_nomad_installation
  become: false
  connection: local
  file:
    path: "/tmp/nomad_{{version}}_linux_arm64.zip"
    state: absent
  run_once: true

- name: Add Nomad group
  ansible.builtin.group:
    name: "{{ group }}"
    system: true
    state: present

- name: Copy Nomad binary
  when: requires_nomad_installation
  copy:
    src: "/opt/nomadInstall/nomad"
    dest: "{{ nomad_binary }}"
    group: "{{ group }}"
    owner: root
    remote_src: yes
    mode: 0755

- name: Create data directory
  file:
    path: "{{ nomad_data_dir }}"
    state: "directory"

- name: Create /var/log/nomad
  file:
    path: "/var/log/nomad"
    state: "directory"

- name: Create shared data directory
  file:
    path: "{{ nomad_shared_dir }}"
    state: "directory"

- name: Create host volume directories
  file:
    path: "{{ item.path }}"
    state: "directory"
  loop: "{{ nomad_host_volumes }}"

- name: Install Nomad Service
  template:
    src: systemd.txt
    dest: /etc/systemd/system/nomad.service
    group: root
    owner: root
    mode: 0644

- name: Reload systemd
  ansible.builtin.systemd:
    daemon_reload: yes

- name: Create /etc/nomad.d
  file:
    path: "/etc/nomad.d"
    state: "directory"

- name: Install nomad.hcl
  template:
    src: nomad.hcl
    dest: /etc/nomad.d/nomad.hcl
    group: root
    owner: root
    mode: 0600

- name: Install server.hcl
  when: is_nomad_server
  template:
    src: server.hcl
    dest: /etc/nomad.d/server.hcl
    group: root
    owner: root
    mode: 0600

- name: Install client.hcl
  when: is_nomad_client
  template:
    src: client.hcl
    dest: /etc/nomad.d/client.hcl
    group: root
    owner: root
    mode: 0600

